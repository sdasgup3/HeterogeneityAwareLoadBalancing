%!PS-Adobe-2.0 EPSF-2.0
%%Title: 2.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Fri Mar 14 19:53:40 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -80 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (2.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Sandeep Dasgupta)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 14 19:53:40 2014)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
1320 408 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 0) Rshow
1.000 UL
LTb
1320 1060 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 2) Rshow
1.000 UL
LTb
1320 1712 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 4) Rshow
1.000 UL
LTb
1320 2364 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 6) Rshow
1.000 UL
LTb
1320 3016 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 8) Rshow
1.000 UL
LTb
1320 3668 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 10) Rshow
1.000 UL
LTb
1320 4320 M
63 0 V
5457 0 R
-63 0 V
-5601 0 R
( 12) Rshow
1.000 UL
LTb
1.000 UL
LTb
1320 4320 N
0 -3912 V
5520 0 V
0 3912 V
-5520 0 V
Z stroke
LCb setrgbcolor
480 2364 M
currentpoint gsave translate 90 rotate 0 0 M
(core assigned ) Cshow
grestore
LTb
LCb setrgbcolor
4080 168 M
(chare ids \(increasing order of chare ids \(i,j\) e.g. \(1,0\) > \(0,1\)\)) Cshow
LTb
4080 4680 M
(core allocation to chare Ids) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
1320 408 Pls
1334 408 Pls
1348 408 Pls
1361 408 Pls
1375 408 Pls
1389 408 Pls
1403 408 Pls
1417 408 Pls
1430 408 Pls
1444 408 Pls
1458 408 Pls
1472 408 Pls
1486 408 Pls
1499 408 Pls
1513 408 Pls
1527 408 Pls
1541 408 Pls
1555 408 Pls
1568 408 Pls
1582 408 Pls
1596 408 Pls
1610 408 Pls
1624 408 Pls
1637 408 Pls
1651 408 Pls
1665 408 Pls
1679 408 Pls
1693 408 Pls
1706 408 Pls
1720 408 Pls
1734 408 Pls
1748 408 Pls
1762 408 Pls
1775 408 Pls
1789 734 Pls
1803 734 Pls
1817 734 Pls
1831 734 Pls
1844 734 Pls
1858 734 Pls
1872 734 Pls
1886 734 Pls
1900 734 Pls
1913 734 Pls
1927 734 Pls
1941 734 Pls
1955 734 Pls
1969 734 Pls
1982 734 Pls
1996 734 Pls
2010 734 Pls
2024 734 Pls
2038 734 Pls
2051 734 Pls
2065 734 Pls
2079 734 Pls
2093 734 Pls
2107 734 Pls
2120 734 Pls
2134 734 Pls
2148 734 Pls
2162 734 Pls
2176 734 Pls
2189 734 Pls
2203 734 Pls
2217 734 Pls
2231 734 Pls
2245 734 Pls
2258 1060 Pls
2272 1060 Pls
2286 1060 Pls
2300 1060 Pls
2314 1060 Pls
2327 1060 Pls
2341 1060 Pls
2355 1060 Pls
2369 1060 Pls
2383 1060 Pls
2396 1060 Pls
2410 1060 Pls
2424 1060 Pls
2438 1060 Pls
2452 1060 Pls
2465 1060 Pls
2479 1060 Pls
2493 1060 Pls
2507 1060 Pls
2521 1060 Pls
2534 1060 Pls
2548 1060 Pls
2562 1060 Pls
2576 1060 Pls
2590 1060 Pls
2603 1060 Pls
2617 1060 Pls
2631 1060 Pls
2645 1060 Pls
2659 1060 Pls
2672 1060 Pls
2686 1060 Pls
2700 1060 Pls
2714 1060 Pls
2728 1386 Pls
2741 1386 Pls
2755 1386 Pls
2769 1386 Pls
2783 1386 Pls
2797 1386 Pls
2810 1386 Pls
2824 1386 Pls
2838 1386 Pls
2852 1386 Pls
2866 1386 Pls
2879 1386 Pls
2893 1386 Pls
2907 1386 Pls
2921 1386 Pls
2935 1386 Pls
2948 1386 Pls
2962 1386 Pls
2976 1386 Pls
2990 1386 Pls
3004 1386 Pls
3017 1386 Pls
3031 1386 Pls
3045 1386 Pls
3059 1386 Pls
3073 1386 Pls
3086 1386 Pls
3100 1386 Pls
3114 1386 Pls
3128 1386 Pls
3142 1386 Pls
3155 1386 Pls
3169 1386 Pls
3183 1386 Pls
3197 1712 Pls
3211 1712 Pls
3224 1712 Pls
3238 1712 Pls
3252 1712 Pls
3266 1712 Pls
3280 1712 Pls
3293 1712 Pls
3307 1712 Pls
3321 1712 Pls
3335 1712 Pls
3349 1712 Pls
3362 1712 Pls
3376 1712 Pls
3390 1712 Pls
3404 1712 Pls
3418 1712 Pls
3431 1712 Pls
3445 1712 Pls
3459 1712 Pls
3473 1712 Pls
3487 1712 Pls
3500 1712 Pls
3514 1712 Pls
3528 1712 Pls
3542 1712 Pls
3556 1712 Pls
3569 1712 Pls
3583 1712 Pls
3597 1712 Pls
3611 1712 Pls
3625 1712 Pls
3638 1712 Pls
3652 2038 Pls
3666 2038 Pls
3680 2038 Pls
3694 2038 Pls
3707 2038 Pls
3721 2038 Pls
3735 2038 Pls
3749 2038 Pls
3763 2038 Pls
3776 2038 Pls
3790 2038 Pls
3804 2038 Pls
3818 2038 Pls
3832 2038 Pls
3845 2038 Pls
3859 2038 Pls
3873 2038 Pls
3887 2038 Pls
3901 2038 Pls
3914 2038 Pls
3928 2038 Pls
3942 2038 Pls
3956 2038 Pls
3970 2038 Pls
3983 2038 Pls
3997 2038 Pls
4011 2038 Pls
4025 2038 Pls
4039 2038 Pls
4052 2038 Pls
4066 2038 Pls
4080 2038 Pls
4094 2038 Pls
4108 2364 Pls
4121 2364 Pls
4135 2364 Pls
4149 2364 Pls
4163 2364 Pls
4177 2364 Pls
4190 2364 Pls
4204 2364 Pls
4218 2364 Pls
4232 2364 Pls
4246 2364 Pls
4259 2364 Pls
4273 2364 Pls
4287 2364 Pls
4301 2364 Pls
4315 2364 Pls
4328 2364 Pls
4342 2364 Pls
4356 2364 Pls
4370 2364 Pls
4384 2364 Pls
4397 2364 Pls
4411 2364 Pls
4425 2364 Pls
4439 2364 Pls
4453 2364 Pls
4466 2364 Pls
4480 2364 Pls
4494 2364 Pls
4508 2364 Pls
4522 2364 Pls
4535 2364 Pls
4549 2364 Pls
4563 2690 Pls
4577 2690 Pls
4591 2690 Pls
4604 2690 Pls
4618 2690 Pls
4632 2690 Pls
4646 2690 Pls
4660 2690 Pls
4673 2690 Pls
4687 2690 Pls
4701 2690 Pls
4715 2690 Pls
4729 2690 Pls
4742 2690 Pls
4756 2690 Pls
4770 2690 Pls
4784 2690 Pls
4798 2690 Pls
4811 2690 Pls
4825 2690 Pls
4839 2690 Pls
4853 2690 Pls
4867 2690 Pls
4880 2690 Pls
4894 2690 Pls
4908 2690 Pls
4922 2690 Pls
4936 2690 Pls
4949 2690 Pls
4963 2690 Pls
4977 2690 Pls
4991 2690 Pls
5005 2690 Pls
5018 3016 Pls
5032 3016 Pls
5046 3016 Pls
5060 3016 Pls
5074 3016 Pls
5087 3016 Pls
5101 3016 Pls
5115 3016 Pls
5129 3016 Pls
5143 3016 Pls
5156 3016 Pls
5170 3016 Pls
5184 3016 Pls
5198 3016 Pls
5212 3016 Pls
5225 3016 Pls
5239 3016 Pls
5253 3016 Pls
5267 3016 Pls
5281 3016 Pls
5294 3016 Pls
5308 3016 Pls
5322 3016 Pls
5336 3016 Pls
5350 3016 Pls
5363 3016 Pls
5377 3016 Pls
5391 3016 Pls
5405 3016 Pls
5419 3016 Pls
5432 3016 Pls
5446 3016 Pls
5460 3016 Pls
5474 3342 Pls
5488 3342 Pls
5501 3342 Pls
5515 3342 Pls
5529 3342 Pls
5543 3342 Pls
5557 3342 Pls
5570 3342 Pls
5584 3342 Pls
5598 3342 Pls
5612 3342 Pls
5626 3342 Pls
5639 3342 Pls
5653 3342 Pls
5667 3342 Pls
5681 3342 Pls
5695 3342 Pls
5708 3342 Pls
5722 3342 Pls
5736 3342 Pls
5750 3342 Pls
5764 3342 Pls
5777 3342 Pls
5791 3342 Pls
5805 3342 Pls
5819 3342 Pls
5833 3342 Pls
5846 3342 Pls
5860 3342 Pls
5874 3342 Pls
5888 3342 Pls
5902 3342 Pls
5915 3342 Pls
5929 3668 Pls
5943 3668 Pls
5957 3668 Pls
5971 3668 Pls
5984 3668 Pls
5998 3668 Pls
6012 3668 Pls
6026 3668 Pls
6040 3668 Pls
6053 3668 Pls
6067 3668 Pls
6081 3668 Pls
6095 3668 Pls
6109 3668 Pls
6122 3668 Pls
6136 3668 Pls
6150 3668 Pls
6164 3668 Pls
6178 3668 Pls
6191 3668 Pls
6205 3668 Pls
6219 3668 Pls
6233 3668 Pls
6247 3668 Pls
6260 3668 Pls
6274 3668 Pls
6288 3668 Pls
6302 3668 Pls
6316 3668 Pls
6329 3668 Pls
6343 3668 Pls
6357 3668 Pls
6371 3668 Pls
6385 3994 Pls
6398 3994 Pls
6412 3994 Pls
6426 3994 Pls
6440 3994 Pls
6454 3994 Pls
6467 3994 Pls
6481 3994 Pls
6495 3994 Pls
6509 3994 Pls
6523 3994 Pls
6536 3994 Pls
6550 3994 Pls
6564 3994 Pls
6578 3994 Pls
6592 3994 Pls
6605 3994 Pls
6619 3994 Pls
6633 3994 Pls
6647 3994 Pls
6661 3994 Pls
6674 3994 Pls
6688 3994 Pls
6702 3994 Pls
6716 3994 Pls
6730 3994 Pls
6743 3994 Pls
6757 3994 Pls
6771 3994 Pls
6785 3994 Pls
6799 3994 Pls
6812 3994 Pls
6826 3994 Pls
1.000 UL
LTb
1320 4320 N
0 -3912 V
5520 0 V
0 3912 V
-5520 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
